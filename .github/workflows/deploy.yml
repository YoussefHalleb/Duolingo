name: Deploy React App to Cloud Run

on:
  push:
    branches:
      - Feature/DUOL-19/ci-cd-Dockerfile

env:
  REGION: europe-west1
  SERVICE_NAME: react-frontend
  REPO_NAME: react-app-repo
  IMAGE_NAME: react-app

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Analyse SonarQube (avant build)
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
            projectBaseDir: .
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: "https://sonarcloud.io"
            SONAR_SCANNER_OPTS: >
              -Dsonar.projectKey=YoussefHalleb_Duolingo
              -Dsonar.organization=youssefhalleb



      # 3️⃣ Authentification GCP avec le Service Account
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 4️⃣ Configurer Docker pour Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # 5️⃣ Build Docker image
      - name: Build Docker Image
        run: |
          IMAGE_URI=${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .

      # 6️⃣ Scanner l'image Docker avec Trivy
      - name: Trivy Scan Docker Image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: 'table'
          exit-code: '1' # stoppe le pipeline si vulnérabilités CRITICAL/HIGH
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # 7️⃣ Push Docker image vers Artifact Registry
      - name: Push Docker Image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 8️⃣ Déployer sur Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated
