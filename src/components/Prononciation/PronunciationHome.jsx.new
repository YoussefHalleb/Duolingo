import { useState, useRef, useEffect } from 'react';
import Navbar from '../shared/Navbar';
import { languageData } from '../../data/languageData';
import { useLanguage } from '../../context/LanguageContext';
import './PronunciationHome.css';

const PronunciationHome = () => {
  const { selectedLanguage } = useLanguage();
  const [activeTab, setActiveTab] = useState('text-to-speech');
  const [selectedCategory, setSelectedCategory] = useState('greetings');
  const [customText, setCustomText] = useState('');
  const [speed, setSpeed] = useState(1);
  const [availableVoices, setAvailableVoices] = useState([]);
  const [playingIndex, setPlayingIndex] = useState(null);
  const [isListening, setIsListening] = useState(false);
  const [testFeedback, setTestFeedback] = useState(null);
  const [transcript, setTranscript] = useState('');
  const [recognition, setRecognition] = useState(null);
  const [testMode, setTestMode] = useState(false);
  const [testType, setTestType] = useState(null);
  const [currentTest, setCurrentTest] = useState(null);
  const [testScore, setTestScore] = useState(0);
  const [totalQuestions, setTotalQuestions] = useState(0);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [userInput, setUserInput] = useState('');
  const [testStats, setTestStats] = useState({
    correctAnswers: 0,
    totalTime: 0,
    categoryScores: {},
    mistakes: [],
    startTime: Date.now()
  });
  const synthRef = useRef(window.speechSynthesis);
